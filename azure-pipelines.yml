# Azure build pipelines for Sysmon

trigger:
    branches:
      include:
        - release/*
        - main
      exclude:
        - dev/*
        - test/*
  
pr:
- main

stages:
 - stage: "Build"
   jobs:
    - job: "Build_Sysmon_Ubuntu_20_04_Package"
      pool: "Sysmon-Ubuntu-20.04-Pool"
      steps:
      - checkout: self
        submodules: true
      - script: |
          wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          apt -y update
          apt install sysinternalsebpf
          mkdir build && cd build
          cmake ..
          make
        displayName: "Build Ubuntu Sysmon 20.04 Binary"
    
      - script: |
          cd build
          make packages
          apt remove -y sysinternalsebpf          
        displayName: "Build Sysmon 20.04 Package"
    
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/build/deb/'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy build artifacts to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'Ubuntu_20_04_drop'
          publishLocation: 'Container'

# CentOS build and package
    - job: "Build_Sysmon_CentOS_8_Package"
      pool: "Sysmon-CentOS-8-Pool"
      steps:
      - checkout: self
        submodules: true
      - script: |
          yum install sysinternalsebpf
          mkdir build && cd build
          cmake ..
          make
        displayName: "Build CentOS Sysmon 8 Binary"
  
      - script: |
          cd build
          make packages
          yum remove sysinternalsebpf
        displayName: "Build Sysmon CentOS 8 Package"
    
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/build/rpm/'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy build artifacts to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'CentOS_8_drop'
          publishLocation: 'Container'

 - stage: Sign
   jobs:
    - job: "Sign_Sysmon_Ubuntu_20_04"
      pool: "Sysmon-Ubuntu-20.04-Pool"
      steps:
      
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'Ubuntu_20_04_drop'
          targetPath: '$(Pipeline.Workspace)'
           
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP CodeSigning DEB'
        inputs:
          ConnectedServiceName: 'Sysinternals ESRP CodeSigning'
          FolderPath: '$(Pipeline.Workspace)'
          Pattern: '*.deb'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "keyCode": "CP-450779-Pgp",
                "OperationCode": "LinuxSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

    - job: "Sign_Sysmon_CentOS_8"
      pool: "CentOS_Package_Build"
      steps:

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'CentOS_8_drop'
          targetPath: '$(Pipeline.Workspace)'

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP CodeSigning DEB'
        inputs:
          ConnectedServiceName: 'Sysinternals ESRP CodeSigning'
          FolderPath: '$(Pipeline.Workspace)'
          Pattern: '*.rpm'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "keyCode": "CP-450779-Pgp",
                "OperationCode": "LinuxSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]